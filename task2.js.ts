//Задача:
//Реализовать систему управления книжным магазином.

//Описание задачи:
//Вы разрабатываете веб-приложение для книжного магазина, 
//которое должно поддерживать следующий функционал:

//1.Хранение информации о книгах:

//Каждая книга должна содержать поля, такие как
// "название", "автор", "жанр", "год издания" и "цена".
//Книги должны храниться в базе данных Postgres.

//2.Управление запасами книг:

//Для каждой книги нужно отслеживать количество доступных экземпляров.
//Информация о запасах должна храниться в базе данных MongoDB.

//3.Обработка заказов:


//Пользователи должны иметь возможность размещать заказы на книги.
//Заказы должны быть помещены в очередь сообщений RabbitMQ 
//для дальнейшей обработки.

//3.Обработка заказов с использованием брокеров:

//Заказы из очереди RabbitMQ должны быть обработаны брокерами, 
//которые проверяют наличие книг и резервируют их для заказчика.
//Информация о заказах и их статусе должна храниться в базе данных Postgres.

//4.Кэширование популярных книг:

//Для улучшения производительности, информацию о популярных книгах можно 
//кэшировать в Redis.


import { Pool } from 'pg';

// Конфигурация подключения к базе данных PostgreSQL
const pool = new Pool({
  user: 'postgres',
  password: '21042003Maks',
  host: 'localhost',
  database: 'store_db',
  port: 5432,
});

// Функция для выполнения запроса SELECT
async function selectDataFromTable() {
  try {
    // Получение клиента из пула подключений
    const client = await pool.connect();

    // Выполнение запроса SELECT
    const result = await client.query('SELECT * FROM books');

    // Получение результатов запроса
    const rows = result.rows;

    // Вывод результатов
    console.log(rows);

    // Освобождение клиента
    client.release();
  } catch (error) {
    console.error('Ошибка при выполнении запроса:', error);
  } finally {
    // Закрытие пула подключений
    await pool.end();
  }
}

// Вызов функции для выполнения запроса
selectDataFromTable();
